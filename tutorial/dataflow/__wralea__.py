
# This file has been generated at Thu Aug 12 13:44:24 2010

from openalea.core import *


__name__ = 'openalea.tutorial.dataflow'

__editable__ = True
__description__ = 'Presents the basics of dataflow usage'
__license__ = 'Cecill-C'
__url__ = ''
__alias__ = ['dataflow']
__version__ = '0.1'
__authors__ = 'Daniel BARBEAU'
__institutes__ = 'INRIA, INRA, CIRAD'
__icon__ = ''


__all__ = ['_311575084', 'lazy', 'block', '_311086284']



_311575084 = CompositeNodeFactory(name='evaluation order 2',
                             authors = 'Thomas Cokelaer',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.data structure', 'int'),
   3: ('openalea.numpy.random', 'randn'),
   4: ('openalea.data structure', 'int'),
   5: ('openalea.numpy.math', 'power'),
   6: ('openalea.numpy.math', 'mean'),
   7: ('openalea.flow control', 'annotation'),
   8: ('openalea.pylab.nodes', 'PyLabHist')},
                             elt_connections={  163257820: (3, 0, 5, 0),
   163257832: (2, 0, 8, 1),
   163257844: (4, 0, 5, 1),
   163257856: (5, 0, 8, 0),
   163257868: (3, 0, 6, 0)},
                             elt_data={  2: {  'block': False,
         'caption': '5 - Parameter',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x12f3042c> : "int"',
         'hide': True,
         'id': 2,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 411.06008362591388,
         'posy': -146.30178052005084,
         'priority': 0,
         'use_user_color': False,
         'user_application': False,
         'user_color': None},
   3: {  'block': False,
         'caption': '1 - Input data',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x1284b36c> : "randn"',
         'hide': True,
         'id': 3,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 249.11810855050493,
         'posy': -264.33211369974435,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': '3 - Parameters',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x12f3042c> : "int"',
         'hide': True,
         'id': 4,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 399.22484671837441,
         'posy': -262.6195983235753,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': '4 - Simulation',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x1282a1ac> : "power"',
         'hide': True,
         'id': 5,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 324.29994537344481,
         'posy': -188.141543144369,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': '2 - Mean',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x127c892c> : "mean"',
         'hide': True,
         'id': 6,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 247.23426028276998,
         'posy': -55.031231525218743,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'factory': '<openalea.core.node.NodeFactory object at 0x12d3136c> : "annotation"',
         'id': 7,
         'posx': 242.0,
         'posy': -326.0,
         'txt': u'(a) dataflow evaluation order'},
   8: {  'block': False,
         'caption': '6 - Post processing',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x12d0e76c> : "PyLabHist"',
         'hide': True,
         'id': 8,
         'lazy': False,
         'port_hide_changed': set([  2,
                                     3,
                                     4,
                                     5,
                                     6,
                                     7,
                                     8,
                                     9,
                                     10,
                                     11,
                                     12,
                                     13,
                                     14,
                                     15,
                                     16,
                                     17,
                                     18,
                                     19,
                                     20,
                                     21]),
         'posx': 350.13966757325443,
         'posy': -55.133765537235661,
         'priority': 0,
         'use_user_color': False,
         'user_application': True,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, '20')],
   3: [(0, '10000000')],
   4: [(0, '1')],
   5: [],
   6: [(1, 'None'), (2, 'None')],
   7: [],
   8: [  (2, "'blue'"),
         (3, 'False'),
         (4, 'False'),
         (5, "'bar'"),
         (6, "'mid'"),
         (7, "'vertical'"),
         (8, 'False'),
         (9, "''"),
         (10, 'True'),
         (11, 'True'),
         (12, '1'),
         (13, "''"),
         (14, "''"),
         (15, "''"),
         (16, '1'),
         (17, 'True'),
         (18, 'False'),
         (19, '{}'),
         (  20,
            "{'xmin': None, 'ymin': None, 'type': 'normal', 'ymax': None, 'xmax': None}"),
         (21, "{'alpha': 1.0, 'animated': False}")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {'position': [411.06008362591388, -146.30178052005084], 'userColor': None, 'useUserColor': False},
   3: {'position': [249.11810855050493, -264.33211369974435], 'userColor': None, 'useUserColor': False},
   4: {'position': [399.22484671837441, -262.6195983235753], 'userColor': None, 'useUserColor': False},
   5: {'position': [324.29994537344481, -188.141543144369], 'userColor': None, 'useUserColor': False},
   6: {'position': [247.23426028276998, -55.031231525218743], 'userColor': None, 'useUserColor': False},
   7: {'color': None, 'position': [242.0, -326.0], 'textColor': None, 'rectP2': (442.0, 329.60766390441859), 'text': u'(a) dataflow evaluation order'},
   8: {'position': [350.13966757325443, -55.133765537235661], 'userColor': None, 'useUserColor': False},
   '__in__': {'position': [0, 0], 'userColor': None, 'useUserColor': True},
   '__out__': {'position': [0, 0], 'userColor': None, 'useUserColor': True}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




lazy = CompositeNodeFactory(name='lazy',
                             description='Usage of the lazy flag',
                             category='tutorial',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.python method', 'print'),
   3: ('openalea.python method', 'range'),
   4: ('openalea.data structure', 'int'),
   5: ('openalea.data structure', 'int'),
   6: ('openalea.data structure', 'int'),
   7: ('openalea.flow control', 'annotation'),
   8: ('openalea.file.pickle', 'pickle dump'),
   9: ('openalea.file', 'filename')},
                             elt_connections={  141622720: (4, 0, 3, 0),
   141622732: (9, 0, 8, 1),
   141622744: (5, 0, 3, 1),
   141622756: (3, 0, 2, 0),
   141622768: (6, 0, 3, 2),
   141622780: (3, 0, 8, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'print',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x9c4992c> : "print"',
         'hide': True,
         'id': 2,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': -309.70338857054657,
         'posy': -39.140781246044391,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'Simulation',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x9c4980c> : "range"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -328.68514381826373,
         'posy': -118.34703665346095,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': '0',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x9553eac> : "int"',
         'hide': True,
         'id': 4,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': -396.82730524835785,
         'posy': -192.69307690360318,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': '6000',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x9553eac> : "int"',
         'hide': True,
         'id': 5,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': -311.19592785382258,
         'posy': -190.52123315281204,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': '2',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x9553eac> : "int"',
         'hide': True,
         'id': 6,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': -202.56455045928726,
         'posy': -190.52123315281202,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'factory': '<openalea.core.node.NodeFactory object at 0x9c9256c> : "annotation"',
         'id': 7,
         'posx': -428.99665847336274,
         'posy': -239.66635816167167,
         'txt': u'The "Simulation" node will run once, and\nafterwards only if any of its inputs changes.'},
   8: {  'block': False,
         'caption': 'pickleToDisk',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x978dfcc> : "pickle dump"',
         'hide': True,
         'id': 8,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': -556.4882227548153,
         'posy': -34.327563408678486,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'filename',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x95ce54c> : "filename"',
         'hide': True,
         'id': 9,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': -544.29742215245642,
         'posy': -125.73506471507331,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [],
   3: [],
   4: [(0, '0')],
   5: [(0, '10000')],
   6: [(0, '2')],
   7: [],
   8: [(2, 'False')],
   9: [(0, "'~/simulationResults.txt'")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-309.70338857054657, -39.140781246044391],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-328.68514381826373, -118.34703665346095],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-396.82730524835785, -192.69307690360318],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-311.19592785382258, -190.52123315281204],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [-202.56455045928726, -190.52123315281202],
         'useUserColor': False,
         'userColor': None},
   7: {  'color': None,
         'htmlText': u'<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'Sans\'; font-size:8pt; font-weight:400; font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">The &quot;Simulation&quot; node will run once, and</p>\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">afterwards only if any of its inputs changes.</p></body></html>',
         'position': [-428.99665847336274, -239.66635816167167],
         'rectP2': (303.0, 241.39972428243323),
         'text': u'The "Simulation" node will run once, and\nafterwards only if any of its inputs changes.'},
   8: {  'position': [-556.4882227548153, -34.327563408678486],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-544.29742215245642, -125.73506471507331],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




block = CompositeNodeFactory(name='block',
                             description='Usage of the block flag',
                             category='tutorial',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.python method', 'print'),
   3: ('openalea.python method', 'range'),
   4: ('openalea.data structure', 'int'),
   5: ('openalea.data structure', 'int'),
   6: ('openalea.data structure', 'int'),
   7: ('openalea.flow control', 'annotation'),
   8: ('openalea.file.pickle', 'pickle dump'),
   9: ('openalea.file', 'filename')},
                             elt_connections={  141622720: (4, 0, 3, 0),
   141622732: (9, 0, 8, 1),
   141622744: (5, 0, 3, 1),
   141622756: (3, 0, 2, 0),
   141622768: (6, 0, 3, 2),
   141622780: (3, 0, 8, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'print',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x9c4992c> : "print"',
         'hide': True,
         'id': 2,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': -309.70338857054657,
         'posy': -39.140781246044391,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': True,
         'caption': 'Simulation',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x9c4980c> : "range"',
         'hide': True,
         'id': 3,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': -328.68514381826373,
         'posy': -118.34703665346095,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': '0',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x9553eac> : "int"',
         'hide': True,
         'id': 4,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': -396.82730524835785,
         'posy': -192.69307690360318,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': '6000',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x9553eac> : "int"',
         'hide': True,
         'id': 5,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': -311.19592785382258,
         'posy': -190.52123315281204,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': '2',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x9553eac> : "int"',
         'hide': True,
         'id': 6,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': -202.56455045928726,
         'posy': -190.52123315281202,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'factory': '<openalea.core.node.NodeFactory object at 0x9c9256c> : "annotation"',
         'id': 7,
         'posx': -428.99665847336274,
         'posy': -239.66635816167167,
         'txt': u'The "Simulation" node will run only once,\neven if its entries change.'},
   8: {  'block': False,
         'caption': 'pickleToDisk',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x978dfcc> : "pickle dump"',
         'hide': True,
         'id': 8,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': -556.4882227548153,
         'posy': -34.327563408678486,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'filename',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x95ce54c> : "filename"',
         'hide': True,
         'id': 9,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': -544.29742215245642,
         'posy': -125.73506471507331,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [],
   3: [],
   4: [(0, '0')],
   5: [(0, '10000')],
   6: [(0, '2')],
   7: [],
   8: [(2, 'False')],
   9: [(0, "'~/simulationResults.txt'")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-309.70338857054657, -39.140781246044391],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-328.68514381826373, -118.34703665346095],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-396.82730524835785, -192.69307690360318],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-311.19592785382258, -190.52123315281204],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [-202.56455045928726, -190.52123315281202],
         'useUserColor': False,
         'userColor': None},
   7: {  'color': None,
         'htmlText': u'<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'Sans\'; font-size:8pt; font-weight:400; font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">The &quot;Simulation&quot; node will run only once,</p>\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">even if its entries change.</p></body></html>',
         'position': [-428.99665847336274, -239.66635816167167],
         'rectP2': (275.29994377584921, 241.39972428243323),
         'text': u'The "Simulation" node will run only once,\neven if its entries change.'},
   8: {  'position': [-556.4882227548153, -34.327563408678486],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-544.29742215245642, -125.73506471507331],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_311086284 = CompositeNodeFactory(name='evaluation order',
                             description='Explains in which order nodes evaluate in a dataflow',
                             category='tutorial',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  5: ('openalea.python method', 'print'),
   10: ('openalea.python method', 'range'),
   11: ('openalea.data structure', 'int'),
   12: ('openalea.data structure', 'int'),
   13: ('openalea.data structure', 'int'),
   14: ('openalea.flow control', 'annotation'),
   15: ('openalea.file.pickle', 'pickle dump'),
   16: ('openalea.file', 'filename')},
                             elt_connections={  163257748: (12, 0, 10, 1),
   163257760: (16, 0, 15, 1),
   163257772: (10, 0, 15, 0),
   163257784: (11, 0, 10, 0),
   163257796: (13, 0, 10, 2),
   163257808: (10, 0, 5, 0)},
                             elt_data={  5: {  'block': False,
         'caption': 'print',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x10d0e7ec> : "print"',
         'hide': True,
         'id': 5,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': -206.40436329982546,
         'posy': -468.12466299365218,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'Simulation',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x10b8edac> : "range"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -225.38611854754262,
          'posy': -547.33091840106863,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': '0',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x10de220c> : "int"',
          'hide': True,
          'id': 11,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -293.52827997763666,
          'posy': -621.67695865121095,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': '6000',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x10de220c> : "int"',
          'hide': True,
          'id': 12,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -207.89690258310137,
          'posy': -619.50511490041981,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': '2',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x10de220c> : "int"',
          'hide': True,
          'id': 13,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -99.265525188566073,
          'posy': -619.50511490041981,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'factory': '<openalea.core.node.NodeFactory object at 0x10c9a14c> : "annotation"',
          'id': 14,
          'posx': -325.69763320264155,
          'posy': -668.65023990927943,
          'txt': u'The "Simulation" node will run once, and\nafterwards only if any of its inputs changes.'},
   15: {  'block': False,
          'caption': 'pickleToDisk',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x10e5a02c> : "pickle dump"',
          'hide': True,
          'id': 15,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -453.18919748409405,
          'posy': -463.31144515628625,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': 'filename',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x10b56f2c> : "filename"',
          'hide': True,
          'id': 16,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -440.99839688173529,
          'posy': -554.71894646268106,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  5: [],
   10: [],
   11: [(0, '0')],
   12: [(0, '10000')],
   13: [(0, '2')],
   14: [],
   15: [(2, 'False')],
   16: [(0, "'~/simulationResults.txt'")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-288.83558778198534, -148.6420839916799],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-450.77756285739429, -266.67241717137341],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-300.67082468952481, -264.95990179520436],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-206.40436329982546, -468.12466299365218],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [-375.5957260344544, -190.48184661599805],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-452.66141112512923, -57.371534996847807],
         'useUserColor': False,
         'userColor': None},
   8: {  'color': None,
         'position': [-457.89567140789921, -328.34030347162906],
         'rectP2': (312.96656518014146, 329.60766390441859),
         'text': u'(c) block evaluation',
         'textColor': None},
   9: {  'position': [-349.75600383464479, -57.474069008864717],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-225.38611854754262, -547.33091840106863],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [-293.52827997763666, -621.67695865121095],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [-207.89690258310137, -619.50511490041981],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [-99.265525188566073, -619.50511490041981],
          'useUserColor': False,
          'userColor': None},
   14: {  'color': None,
          'htmlText': u'<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'Sans\'; font-size:8pt; font-weight:400; font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">The &quot;Simulation&quot; node will run once, and</p>\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">afterwards only if any of its inputs changes.</p></body></html>',
          'position': [-325.69763320264155, -668.65023990927943],
          'rectP2': (428.0, 241.39972428243323),
          'text': u'The "Simulation" node will run once, and\nafterwards only if any of its inputs changes.',
          'textColor': None},
   15: {  'position': [-453.18919748409405, -463.31144515628625],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [-440.99839688173529, -554.71894646268106],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




