
# This file has been generated at Mon Aug  9 09:43:24 2010

from openalea.core import *


__name__ = 'openalea.tutorial.functional'

__editable__ = True
__description__ = ''
__license__ = ''
__url__ = ''
__alias__ = []
__version__ = ''
__authors__ = ''
__institutes__ = ''
__icon__ = ''


__all__ = ['TutOrder', '_175950764', 'Tut4', 'Fibonacci', 'Tut1', 'TutWhile', 'Tut2', 'Tut3']



TutOrder = CompositeNodeFactory(name='TutOrder',
                             description='',
                             category='composite,tutorial',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.data structure', 'float'),
   3: ('openalea.data structure', 'float'),
   4: ('openalea.data structure', '#list'),
   5: ('openalea.data structure', 'float'),
   6: ('openalea.flow control', 'annotation'),
   7: ('openalea.flow control', 'annotation')},
                             elt_connections={  9794436: (5, 0, 4, 0), 9794448: (2, 0, 4, 0), 9794460: (3, 0, 4, 0)},
                             elt_data={  2: {  'block': False,
         'caption': '2.0',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 212.5,
         'posy': 133.75,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': '1.0',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 116.25,
         'posy': 136.25,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': 'list',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 217.5,
         'posy': 278.75,
         'priority': 0,
         'user_application': None},
   5: {  'block': False,
         'caption': '3.0',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 300.0,
         'posy': 135.0,
         'priority': 0,
         'user_application': None},
   6: {  'posx': 311.25, 'posy': 288.75, 'txt': '[1.0, 2.0, 3.0]'},
   7: {  'posx': 87.5,
         'posy': 67.5,
         'txt': 'Create a list with multiple connections'},
   '__in__': {  'caption': 'In',
                'hide': True,
                'lazy': True,
                'minimal': False,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0},
   '__out__': {  'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'minimal': False,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0}},
                             elt_value={  2: [(0, '2.0')],
   3: [(0, '1.0')],
   4: [],
   5: [(0, '3.0')],
   6: [],
   7: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_175950764 = CompositeNodeFactory(name='multi_file',
                             description='',
                             category='composite,tutorial',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.function operator', 'map'),
   3: ('openalea.flow control', 'annotation'),
   4: ('openalea.file', 'glob'),
   5: ('openalea.file', 'dirname'),
   6: ('openalea.flow control', 'annotation'),
   7: ('openalea.data structure.string', 'string'),
   8: ('openalea.file', 'joinpath'),
   9: ('openalea.data structure.string', 'join'),
   10: ('openalea.data structure.string', 'string'),
   12: ('openalea.flow control', 'X'),
   13: ('openalea.flow control', 'annotation'),
   14: ('openalea.system', 'command')},
                             elt_connections={  9789976: (8, 0, 4, 0),
   9789988: (12, 0, 9, 0),
   9790000: (7, 0, 8, 0),
   9790012: (4, 0, 2, 1),
   9790024: (14, 0, 2, 0),
   9790036: (5, 0, 8, 0),
   9790048: (10, 0, 9, 0),
   9790060: (9, 0, 14, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'map',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 266.02157943067033,
         'posy': 287.39784205693297,
         'priority': 0,
         'user_application': None},
   3: {  'posx': 103.75, 'posy': 38.75, 'txt': 'Build command'},
   4: {  'block': False,
         'caption': 'glob',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 396.25,
         'posy': 211.25,
         'priority': 0,
         'user_application': None},
   5: {  'block': False,
         'caption': 'dirname',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 346.25,
         'posy': 73.75,
         'priority': 0,
         'user_application': None},
   6: {  'posx': 370.0, 'posy': 17.5, 'txt': 'Get a list of file'},
   7: {  'block': False,
         'caption': "'*.py'",
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 460.0,
         'posy': 73.75,
         'priority': 0,
         'user_application': None},
   8: {  'block': False,
         'caption': 'joinpath',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 386.25,
         'posy': 150.0,
         'priority': 0,
         'user_application': None},
   9: {  'block': False,
         'caption': 'join',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 157.5,
         'posy': 150.0,
         'priority': 0,
         'user_application': None},
   10: {  'block': False,
          'caption': "'dos2unix'",
          'hide': True,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set(),
          'posx': 82.5,
          'posy': 78.75,
          'priority': 0,
          'user_application': None},
   12: {  'block': False,
          'caption': 'Filename',
          'hide': True,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set(),
          'posx': 208.10146923783287,
          'posy': 72.674471992653793,
          'priority': 0,
          'user_application': None},
   13: {  'posx': 162.5, 'posy': 340.0, 'txt': 'Apply the command to each file'},
   14: {  'block': False,
          'caption': 'os.system',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 150.0,
          'posy': 220.0,
          'priority': 0,
          'user_application': None},
   '__in__': {  'caption': 'In',
                'hide': True,
                'lazy': True,
                'minimal': False,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0},
   '__out__': {  'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'minimal': False,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0}},
                             elt_value={  2: [],
   3: [],
   4: [],
   5: [(0, "'D:/Documents/pradal/devlp/aleapkg/adel/adel/geometry'")],
   6: [],
   7: [(0, "'*.py'")],
   8: [],
   9: [(1, "' '")],
   10: [(0, "'dos2unix'")],
   12: [(0, "'x'")],
   13: [],
   14: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




Tut4 = CompositeNodeFactory(name='Tut4',
                             description='',
                             category='composite,tutorial',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.data structure', '#list'),
   3: ('openalea.function operator', 'map'),
   4: ('openalea.flow control', 'X'),
   6: ('openalea.math', '>='),
   7: ('openalea.flow control', 'X'),
   8: ('openalea.data structure', 'int'),
   9: ('openalea.function operator', 'filter')},
                             elt_connections={  9794400: (7, 0, 6, 0),
   9794412: (8, 0, 6, 1),
   9794424: (6, 0, 9, 0),
   9794436: (4, 0, 9, 1),
   9794448: (9, 0, 3, 0),
   9794460: (2, 0, 3, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'list',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 433.75,
         'posy': 286.25,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'map',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 345.0,
         'posy': 368.75,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': 'X',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 376.25,
         'posy': 172.5,
         'priority': 0,
         'user_application': None},
   6: {  'block': False,
         'caption': '>=',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 266.25,
         'posy': 215.0,
         'priority': 0,
         'user_application': None},
   7: {  'block': False,
         'caption': 'X',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 175.0,
         'posy': 107.5,
         'priority': 0,
         'user_application': None},
   8: {  'block': False,
         'caption': '7',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 297.5,
         'posy': 118.75,
         'priority': 0,
         'user_application': None},
   9: {  'block': False,
         'caption': 'filter',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 290.0,
         'posy': 278.75,
         'priority': 0,
         'user_application': None},
   '__in__': {  'caption': 'In',
                'hide': True,
                'lazy': True,
                'minimal': False,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0},
   '__out__': {  'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'minimal': False,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0}},
                             elt_value={  2: [  (  0,
            '[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]]')],
   3: [],
   4: [(0, "'x'")],
   6: [],
   7: [(0, "'x'")],
   8: [(0, '7')],
   9: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




Fibonacci = CompositeNodeFactory(name='Fibonacci',
                             description='',
                             category='composite,tutorial',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.flow control', 'X'),
   3: ('openalea.flow control', 'X'),
   4: ('openalea.data structure', 'int'),
   5: ('openalea.data structure', 'int'),
   6: ('openalea.data structure', 'int'),
   7: ('openalea.math', '>='),
   8: ('openalea.flow control', 'while multivariate'),
   9: ('openalea.math', '+'),
   10: ('openalea.python method', 'getitem'),
   11: ('openalea.data structure', 'int'),
   12: ('openalea.flow control', 'annotation'),
   14: ('openalea.flow control', 'annotation'),
   15: ('openalea.flow control', 'annotation'),
   16: ('openalea.flow control', 'annotation')},
                             elt_connections={  135671176: (5, 0, 8, 0),
   135671188: (11, 0, 10, 1),
   135671200: (4, 0, 8, 0),
   135671212: (2, 0, 10, 0),
   135671224: (7, 0, 8, 1),
   135671236: (6, 0, 7, 0),
   135671248: (9, 0, 8, 2),
   135671260: (2, 0, 9, 0),
   135671272: (3, 0, 9, 1),
   135671284: (2, 0, 7, 1),
   135671296: (3, 0, 10, 0),
   135671308: (10, 0, 8, 2)},
                             elt_data={  2: {  'block': False,
         'caption': 'Un',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x96d43ec> : "X"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 393.60530654480965,
         'posy': 128.64071773245703,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'Un+1',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x96d43ec> : "X"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 547.02795841447039,
         'posy': 130.68409678485639,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': '1',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x9ae458c> : "int"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 37.567519329908244,
         'posy': 138.15330592838313,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': '1',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x9ae458c> : "int"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 93.866642707387214,
         'posy': 134.69317083425244,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': '10000000',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x9ae458c> : "int"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 214.38280976153987,
         'posy': 131.23916709862843,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': '>=',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x93e7d8c> : ">="',
         'hide': True,
         'id': 7,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 251.57630182988021,
         'posy': 226.08627369055145,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'while multivariate',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x96d450c> : "while multivariate"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 175.99153955167736,
         'posy': 316.05578145090436,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x93eb18c> : "+"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 471.10278931732955,
         'posy': 153.02183825857369,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x9353dac> : "getitem"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set(),
          'posx': 436.51435965785998,
          'posy': 275.4205375639541,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': '1',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x9ae458c> : "int"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set(),
          'posx': 523.8181071918342,
          'posy': 231.29252471276348,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'factory': '<openalea.core.node.NodeFactory object at 0x96cfaac> : "annotation"',
          'id': 12,
          'posx': 23.160086667824125,
          'posy': 12.776873424348492,
          'txt': u'Fibonacci example using the multivariate node.'},
   14: {  'factory': '<openalea.core.node.NodeFactory object at 0x96cfaac> : "annotation"',
          'id': 14,
          'posx': 339.7605124239094,
          'posy': 95.037905573121506,
          'txt': u'U_{n+1} = U_n + U_{n+1}'},
   15: {  'factory': '<openalea.core.node.NodeFactory object at 0x96cfaac> : "annotation"',
          'id': 15,
          'posx': 29.699345491600454,
          'posy': 95.03790557312152,
          'txt': u'initial values'},
   16: {  'factory': '<openalea.core.node.NodeFactory object at 0x96cfaac> : "annotation"',
          'id': 16,
          'posx': 177.00809912993881,
          'posy': 95.631892482953532,
          'txt': u'max value'},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'minimal': False,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'minimal': False,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, "'x'")],
   3: [(0, "'Un+1'")],
   4: [(0, '1')],
   5: [(0, '1')],
   6: [(0, '10000000')],
   7: [],
   8: [],
   9: [],
   10: [],
   11: [(0, '1')],
   12: [],
   14: [],
   15: [],
   16: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {'position': [393.60530654480965, 128.64071773245703], 'userColor': None, 'useUserColor': False},
   3: {'position': [547.02795841447039, 130.68409678485639], 'userColor': None, 'useUserColor': False},
   4: {'position': [37.567519329908244, 138.15330592838313], 'userColor': None, 'useUserColor': False},
   5: {'position': [93.866642707387214, 134.69317083425244], 'userColor': None, 'useUserColor': False},
   6: {'position': [214.38280976153987, 131.23916709862843], 'userColor': None, 'useUserColor': False},
   7: {'position': [251.57630182988021, 226.08627369055145], 'userColor': None, 'useUserColor': False},
   8: {'position': [175.99153955167736, 316.05578145090436], 'userColor': None, 'useUserColor': False},
   9: {'position': [471.10278931732955, 153.02183825857369], 'userColor': None, 'useUserColor': False},
   10: {'position': [436.51435965785998, 275.4205375639541], 'userColor': None, 'useUserColor': False},
   11: {'position': [523.8181071918342, 231.29252471276348], 'userColor': None, 'useUserColor': False},
   12: {'color': None, 'position': [23.160086667824125, 12.776873424348492], 'htmlText': u'<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'Sans\'; font-size:10pt; font-weight:400; font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Fibonacci example using the multivariate node.</p></body></html>', 'rectP2': (655.40515630863911, 63.162050290591097), 'text': u'Fibonacci example using the multivariate node.'},
   14: {'color': None, 'position': [339.7605124239094, 95.037905573121506], 'htmlText': u'<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'Sans\'; font-size:10pt; font-weight:400; font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">U_{n+1} = U_n + U_{n+1}</p></body></html>', 'rectP2': (303.4034516779293, 136.64109079918649), 'text': u'U_{n+1} = U_n + U_{n+1}'},
   15: {'color': None, 'position': [29.699345491600454, 95.03790557312152], 'htmlText': u'<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'Sans\'; font-size:10pt; font-weight:400; font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">initial values</p></body></html>', 'rectP2': (131.0, 134.04879256469312), 'text': u'initial values'},
   16: {'color': None, 'position': [177.00809912993881, 95.631892482953532], 'htmlText': u'<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'Sans\'; font-size:10pt; font-weight:400; font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">max value</p></body></html>', 'rectP2': (152.21994167879188, 95.718172291647619), 'text': u'max value'},
   '__in__': {'position': [20.0, 5.0], 'userColor': None, 'useUserColor': True},
   '__out__': {'position': [20.0, 250.0], 'userColor': None, 'useUserColor': True}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




Tut1 = CompositeNodeFactory(name='Tut1',
                             description='',
                             category='composite,tutorial',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.python method', 'range'),
   3: ('openalea.function operator', 'map'),
   4: ('openalea.math', '+'),
   7: ('openalea.flow control', 'X'),
   8: ('openalea.data structure', 'int'),
   9: ('openalea.math', '*')},
                             elt_connections={  9794400: (9, 0, 3, 0),
   9794412: (4, 0, 9, 0),
   9794424: (8, 0, 9, 1),
   9794436: (8, 0, 4, 1),
   9794448: (7, 0, 4, 0),
   9794460: (2, 0, 3, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'range',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 366.25,
         'posy': 145.0,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'map',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 220.0,
         'posy': 297.5,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': '+',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 98.75,
         'posy': 138.75,
         'priority': 0,
         'user_application': None},
   7: {  'block': False,
         'caption': 'X',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 50.0,
         'posy': 36.25,
         'priority': 0,
         'user_application': None},
   8: {  'block': False,
         'caption': '5',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 172.5,
         'posy': 47.5,
         'priority': 0,
         'user_application': None},
   9: {  'block': False,
         'caption': '*',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 131.25,
         'posy': 206.25,
         'priority': 0,
         'user_application': None},
   '__in__': {  'caption': 'In',
                'hide': True,
                'lazy': True,
                'minimal': False,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0},
   '__out__': {  'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'minimal': False,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0}},
                             elt_value={  2: [(0, '0'), (1, '10'), (2, '1')],
   3: [],
   4: [],
   7: [(0, "'x'")],
   8: [(0, '5')],
   9: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




TutWhile = CompositeNodeFactory(name='TutWhile',
                             description='',
                             category='composite,tutorial',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.flow control', 'X'),
   3: ('openalea.flow control', 'while univariate'),
   4: ('openalea.math', '>='),
   5: ('openalea.data structure', 'int'),
   6: ('openalea.data structure', 'int'),
   7: ('openalea.math', '+'),
   8: ('openalea.data structure', 'int'),
   9: ('openalea.flow control', 'while multivariate'),
   10: ('openalea.data structure', '#list'),
   11: ('openalea.flow control', 'X'),
   12: ('openalea.flow control', 'X'),
   13: ('openalea.math', '*'),
   14: ('openalea.math', '>='),
   15: ('openalea.data structure', 'int'),
   16: ('openalea.math', '+'),
   17: ('openalea.data structure', 'int'),
   18: ('openalea.flow control', 'annotation'),
   19: ('openalea.flow control', 'annotation'),
   25: ('openalea.flow control', 'annotation'),
   26: ('openalea.flow control', 'annotation'),
   27: ('openalea.flow control', 'annotation'),
   28: ('openalea.flow control', 'annotation'),
   29: ('openalea.flow control', 'annotation'),
   30: ('openalea.flow control', 'annotation')},
                             elt_connections={  9794268: (8, 0, 3, 0),
   9794280: (12, 0, 16, 0),
   9794292: (6, 0, 7, 1),
   9794304: (2, 0, 7, 0),
   9794316: (12, 0, 13, 1),
   9794328: (2, 0, 4, 1),
   9794340: (5, 0, 4, 0),
   9794352: (14, 0, 9, 1),
   9794364: (17, 0, 14, 0),
   9794376: (7, 0, 3, 2),
   9794388: (16, 0, 9, 2),
   9794400: (10, 0, 9, 0),
   9794412: (4, 0, 3, 1),
   9794424: (15, 0, 16, 1),
   9794436: (11, 0, 13, 0),
   9794448: (13, 0, 9, 2),
   9794460: (12, 0, 14, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'X',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 335.0,
         'posy': 118.75,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'while univariate',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 293.04420896720154,
         'posy': 356.12805978134344,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': '>=',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 298.75,
         'posy': 217.5,
         'priority': 0,
         'user_application': None},
   5: {  'block': False,
         'caption': '10',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 241.25,
         'posy': 150.0,
         'priority': 0,
         'user_application': None},
   6: {  'block': False,
         'caption': '3',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 475.0,
         'posy': 176.25,
         'priority': 0,
         'user_application': None},
   7: {  'block': False,
         'caption': '+',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 432.66158206559697,
         'posy': 251.59298505466415,
         'priority': 0,
         'user_application': None},
   8: {  'block': False,
         'caption': '0',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 216.25,
         'posy': 247.5,
         'priority': 0,
         'user_application': None},
   9: {  'block': False,
         'caption': 'while multivariate',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 311.81704456850707,
         'posy': 719.59755217492523,
         'priority': 0,
         'user_application': None},
   10: {  'block': False,
          'caption': 'list',
          'hide': True,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set(),
          'posx': 169.31704456850707,
          'posy': 599.59755217492523,
          'priority': 0,
          'user_application': None},
   11: {  'block': False,
          'caption': 'X',
          'hide': True,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set(),
          'posx': 410.56704456850707,
          'posy': 493.34755217492523,
          'priority': 0,
          'user_application': None},
   12: {  'block': False,
          'caption': 'T',
          'hide': True,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set(),
          'posx': 529.88408913701414,
          'posy': 486.00913424052226,
          'priority': 0,
          'user_application': None},
   13: {  'block': False,
          'caption': '*',
          'hide': True,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set(),
          'posx': 465.38564157943983,
          'posy': 609.59755217492523,
          'priority': 0,
          'user_application': None},
   14: {  'block': False,
          'caption': '>=',
          'hide': True,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set(),
          'posx': 315.56704456850707,
          'posy': 595.84755217492523,
          'priority': 0,
          'user_application': None},
   15: {  'block': False,
          'caption': '1',
          'hide': True,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set(),
          'posx': 733.32773125145502,
          'posy': 585.1219402186565,
          'priority': 0,
          'user_application': None},
   16: {  'block': False,
          'caption': '+',
          'hide': True,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set(),
          'posx': 640.61393518332409,
          'posy': 656.98599263388542,
          'priority': 0,
          'user_application': None},
   17: {  'block': False,
          'caption': '10',
          'hide': True,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set(),
          'posx': 271.81704456850707,
          'posy': 530.84755217492523,
          'priority': 0,
          'user_application': None},
   18: {  'posx': 302.02603069317337,
          'posy': 67.275940486157111,
          'txt': 'Condition'},
   19: {  'posx': 111.64943314723948,
          'posy': 246.20131411955367,
          'txt': 'init value'},
   25: {  'posx': 691.30818094903373,
          'posy': 194.61134374272481,
          'txt': 'x = 0\nwhile x <=10 :\n   x += 3'},
   26: {  'posx': 853.11618148403488,
          'posy': 552.52155377992858,
          'txt': 'x,t = 0, 0\n\nwhile t <=10 :\n   x = x * t\n   t += 1'},
   27: {  'posx': 548.16788204231648,
          'posy': 729.95606165384731,
          'txt': 'Functions'},
   28: {  'posx': 224.67080651313552,
          'posy': 480.89194155615934,
          'txt': 'Condition'},
   29: {  'posx': 45.745432879739013,
          'posy': 599.69838964873452,
          'txt': 'init values'},
   30: {  'posx': 525.32489698765232,
          'posy': 247.63271710862085,
          'txt': 'Function'},
   '__in__': {  'caption': 'In',
                'hide': True,
                'lazy': True,
                'minimal': False,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0},
   '__out__': {  'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'minimal': False,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0}},
                             elt_value={  2: [(0, "'x'")],
   3: [],
   4: [],
   5: [(0, '10')],
   6: [(0, '3')],
   7: [],
   8: [(0, '0')],
   9: [],
   10: [(0, '[1, 1]')],
   11: [(0, "'x'")],
   12: [(0, "'x'")],
   13: [],
   14: [],
   15: [(0, '1')],
   16: [],
   17: [(0, '10')],
   18: [],
   19: [],
   25: [],
   26: [],
   27: [],
   28: [],
   29: [],
   30: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




Tut2 = CompositeNodeFactory(name='Tut2',
                             description='',
                             category='composite,tutorial',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.function operator', 'reduce'),
   3: ('openalea.flow control', 'X'),
   4: ('openalea.flow control', 'X'),
   5: ('openalea.math', '*'),
   6: ('openalea.python method', 'range'),
   7: ('openalea.flow control', 'annotation')},
                             elt_connections={  9790024: (6, 0, 2, 1),
   9790036: (5, 0, 2, 0),
   9790048: (4, 0, 5, 1),
   9790060: (3, 0, 5, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'reduce',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 262.5,
         'posy': 218.75,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'X0',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 218.75,
         'posy': 32.5,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': 'X1',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 307.5,
         'posy': 30.0,
         'priority': 0,
         'user_application': None},
   5: {  'block': False,
         'caption': '*',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 257.5,
         'posy': 103.75,
         'priority': 0,
         'user_application': None},
   6: {  'block': False,
         'caption': 'range',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 386.25,
         'posy': 112.5,
         'priority': 0,
         'user_application': None},
   7: {  'posx': 362.5, 'posy': 221.25, 'txt': 'Factorial with a reduce'},
   '__in__': {  'caption': 'In',
                'hide': True,
                'lazy': True,
                'minimal': False,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0},
   '__out__': {  'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'minimal': False,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0}},
                             elt_value={  2: [],
   3: [(0, "'x1'")],
   4: [(0, "'x1'")],
   5: [],
   6: [(0, '1'), (1, '10'), (2, '1')],
   7: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




Tut3 = CompositeNodeFactory(name='Tut3',
                             description='',
                             category='composite,tutorial',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.python method', 'range'),
   3: ('openalea.flow control', 'annotation'),
   4: ('openalea.math', '>='),
   5: ('openalea.math', 'and'),
   6: ('openalea.math', '>='),
   7: ('openalea.flow control', 'X'),
   8: ('openalea.data structure', 'int'),
   9: ('openalea.data structure', 'int'),
   10: ('openalea.function operator', 'filter')},
                             elt_connections={  9789976: (9, 0, 4, 0),
   9789988: (7, 0, 4, 1),
   9790000: (2, 0, 10, 1),
   9790012: (6, 0, 5, 1),
   9790024: (8, 0, 6, 1),
   9790036: (5, 0, 10, 0),
   9790048: (4, 0, 5, 0),
   9790060: (7, 0, 6, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'range',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 496.25,
         'posy': 178.75,
         'priority': 0,
         'user_application': None},
   3: {  'posx': 366.25, 'posy': 28.75, 'txt': 'X <= 7 and X >= 2'},
   4: {  'block': False,
         'caption': '>=',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 146.25,
         'posy': 161.25,
         'priority': 0,
         'user_application': None},
   5: {  'block': False,
         'caption': 'and',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 236.25,
         'posy': 256.25,
         'priority': 0,
         'user_application': None},
   6: {  'block': False,
         'caption': '>=',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 268.75,
         'posy': 163.75,
         'priority': 0,
         'user_application': None},
   7: {  'block': False,
         'caption': 'X',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 205.0,
         'posy': 42.5,
         'priority': 0,
         'user_application': None},
   8: {  'block': False,
         'caption': '2',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 300.0,
         'posy': 67.5,
         'priority': 0,
         'user_application': None},
   9: {  'block': False,
         'caption': '7',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set(),
         'posx': 116.25,
         'posy': 82.5,
         'priority': 0,
         'user_application': None},
   10: {  'block': False,
          'caption': 'filter',
          'hide': True,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set(),
          'posx': 348.17901234567898,
          'posy': 325.29320987654319,
          'priority': 0,
          'user_application': None},
   '__in__': {  'caption': 'In',
                'hide': True,
                'lazy': True,
                'minimal': False,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0},
   '__out__': {  'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'minimal': False,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0}},
                             elt_value={  2: [(0, '0'), (1, '10'), (2, '1')],
   3: [],
   4: [],
   5: [],
   6: [],
   7: [(0, "'x'")],
   8: [(0, '2')],
   9: [(0, '7')],
   10: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




